#!/bin/bash

. Load

TargetDomain=$1
if [[ $TargetDomain == "" ]]; then 
    Error 'Domain is not provided';
    exit;
fi

if [[ ! -d /PaydarNode/Deployment ]]; then 
    Error Please clone the Deployment repo
    exit
fi

if [[ ! -f /PaydarNode/Deployment/Hosts/$1 ]]; then 
    Error Cannot find deployment file: /PaydarNode/Deployment/Hosts/$1
    exit
fi

ProjectPath=$(cat /PaydarNode/Deployment/Hosts/$1 2>/dev/null | grep ProjectPath | awk '{print $2}')
if [[ ! -d $ProjectPath ]]; then 
    Error Cannot find project $ProjectPath
    Error Please clone the repository
    exit
fi
if [[ $ProjectPath == "" ]]; then 
    Error Cannot find ProjectPath in /PaydarNode/Deployment/Hosts/$1
    exit
fi

HostServer=$(cat /PaydarNode/Deployment/Hosts/$1 2>/dev/null | grep HostServer | awk '{print $2}')
if [[ $HostServer == "" ]]; then 
    HostServer=$TargetDomain
fi

ServerPath=$(cat /PaydarNode/Deployment/Hosts/$1 2>/dev/null | grep ServerPath | awk '{print $2}')
if [[ $ServerPath == "" ]]; then 
    Error Cannot find ServerPath in /PaydarNode/Deployment/Hosts/$1
    exit
fi

Info Validating server path...
if [[ ! `ssh root@$HostServer test -f $ServerPath/$TargetDomain.conf && echo exists` ]] ; then
    Error "Nginx configuration is not created for $TargetDomain"
    Warning "Make sure nginx conf exist on $ServerPath/$TargetDomain.conf"
    exit
fi
Success "$ServerPath exists"
Divide

Info Validating nginx config on server...
if [[ ! `ssh root@$HostServer test -f /etc/nginx/conf.d/$TargetDomain.conf && echo exists` ]] ; then
    Error "Nginx is not configured for $TargetDomain"
    Warning "Make sure nginx conf linked to /etc/nginx/conf.d/$TargetDomain.conf"
    exit
fi
Success "$TargetDomain.conf exists"
Divide

cd $ProjectPath

Extract

Info "Building the project..."
echo

Build

echo
Info "Project build finished"

Divide

sudo chmod 777 /Build
cd /Build

export Hash=$(cat /Build/hash 2>/dev/null)
if IsSite; then
    Info "Hash node_$Hash"
fi

Info "Compressing the built output..."

cd /$ProjectPath
if IsSite; then
    cd /Build
    zip -rq publish.zip .next public next.config.js next.js package.json
elif IsPanel; then
    cd /Build
    zip -rq publish.zip assets hash images index.html
elif IsApi; then
    cd /Build
    zip -rq publish.zip ./**
fi

Info "Built output is compressed"

Divide

export HostServer=$HostServer
export TargetDomain=$TargetDomain
export ServerPath=$ServerPath
export ProjectPath=$ProjectPath
export ServerPort=$(ssh root@$HostServer "/PaydarCore/ServerLinux/Commands/Port $TargetDomain")
export Organization=$Organization
export Repository=$Repository
export Project=$Project
export ServerProject=$(echo $ServerPath | cut -d'/' -f4)
export Brand=$(echo $ServerPath | cut -d'/' -f3)

Success "Telemetry"
Info HostServer $HostServer
Info TargetDomain $TargetDomain
Info ProjectPath $ProjectPath
Info ServerPath $ServerPath
Info ServerPort $ServerPort
Info Organization $Organization
Info Repository $Repository
Info Project $Project
Info Brand $Brand
Info ServerProject $ServerProject

cd /$ProjectPath

if [[ $Repository == "Storage" ]]; then
    export Project="Storage"
fi

if IsSite; then
    envsubst < /PaydarCore/ServerLinux/DockerCompose/Site > /Build/docker-compose.yml
elif IsPanel; then
    envsubst < /PaydarCore/ServerLinux/DockerCompose/Panel > /Build/docker-compose.yml
elif IsApi; then
    envsubst < /PaydarCore/ServerLinux/DockerCompose/Api > /Build/docker-compose.yml
fi

if IsSite; then
    envsubst < /PaydarCore/ServerLinux/DeployerTemplates/Site > /Build/$TargetDomain.deployer
elif IsPanel; then
    envsubst < /PaydarCore/ServerLinux/DeployerTemplates/Panel > /Build/$TargetDomain.deployer
elif IsApi; then
    envsubst < /PaydarCore/ServerLinux/DeployerTemplates/Api > /Build/$TargetDomain.deployer
fi

Divide
Info "Removing old deployment..."
ssh root@$HostServer "rm -rf $ServerPath/$TargetDomain.deployer $ServerPath/publish.zip"
Info "Old deployment files deleted"

Divide

Warning If built successfully and deploy failed to do so:
Warning scp /Build/docker-compose.yml root@$HostServer:$ServerPath
Warning scp /Build/$TargetDomain.deployer root@$HostServer:$ServerPath
Warning scp /Build/publish.zip root@$HostServer:$ServerPath
Warning ssh root@$HostServer "chmod 777 $ServerPath/$TargetDomain.deployer"
Warning ssh root@$HostServer "$ServerPath/$TargetDomain.deployer" &

Divide

Info "Uploading started..."
echo

scp /Build/docker-compose.yml root@$HostServer:$ServerPath
scp /Build/$TargetDomain.deployer root@$HostServer:$ServerPath
scp /Build/publish.zip root@$HostServer:$ServerPath

echo
Info "Uploaded."

Divide

Info "Deploying the project..."
echo

ssh root@$HostServer "chmod 777 $ServerPath/$TargetDomain.deployer"
ssh root@$HostServer "$ServerPath/$TargetDomain.deployer" &
