#!/bin/bash
. Load

function ValidateGitHubAccessTokenFile()
{
    if [[ $(cat /LocalSecrets/GitHubAccessToken | wc -c) < 40 ]]; then
        Error "Invalid content in GitHubAccessToken, make sure save your GitHub Personal Access Token to /LocalSecrets/GitHubAccessToken"
        exit;
    fi
}

function GetJson()
{
    export Program=Curl
    export accessToken=$(cat /LocalSecrets/GitHubAccessToken)
    if [[ $Program == Curl ]]; then
        Response=$(curl --silent -H "Authorization: token $accessToken" "https://api.github.com/orgs/$Organization/repos?per_page=100&page=$1")
    else
        wget -q -d -S --show-progress --header="Authorization: token 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" "https://api.github.com/orgs/$Organization/repos?per_page=100&page=$1" -O /Temp/RepositoriesJson
        Divide
        Info "Got the response"
        Divide
        Response=$(cat /Temp/RepositoriesJson)
    fi
    
}

function LoopAndClone()
{
    echo $Response | jq -r ".[].name" | 
    {
        while read -r name ; do
            (git -C /$Organization clone git@github.com:$Organization/$name) &
            # if [[ "$name" == *Api ]] || [[ "$name" == *Panel ]] || [[ "$name" == Site ]] || [[ "$name" == Common ]] || [[ "$name" == Blog ]]; then
            #     git clone git@github.com:$Organization/$name
            # fi
        done
        wait
    }
}

Organization=$1

if [[ $Organization == "" ]]; then 
    Error 'Organization name is not provided';
    exit;
fi

Info "Organization: $Organization"

cd /$Organization

ValidateGitHubAccessTokenFile

GetJson 1

if [[ $Response == *"Bad credentials"* ]]; then
    Error $Response
    exit
fi

if [[ $Response == *"Not Found"* ]]; then
    # Response=$(curl --silent -H "Authorization: token $accessToken" "https://api.github.com/repos/PaydarNode/$Organization")
    if [[ $Response == *"Not Found"* ]]; then
        Error $Response
    else
        git -C /PaydarNode clone git@github.com:PaydarNode/$Organization
    fi
else
    LoopAndClone
    GetJson 2
    LoopAndClone
fi

rm -rf /Temp/RepositoriesJson

find /PaydarCore /PaydarNode -maxdepth 2  -type d -name ".git" 2>/dev/null | xargs sudo chmod -R 777

Safe

FixGit

Divide
Success "Cloned all"
Divide
